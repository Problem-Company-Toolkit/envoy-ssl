
# Documentation reference:
# https://www.envoyproxy.io/docs/envoy/v1.23.1/api-v3/api
# This template uses Jinja2.

static_resources:
  listeners:
    - name: app
      address:
        socket_address:
          address: 0.0.0.0
          port_value: {{ env['HTTP_PROXY_PORT'] or 80 }}
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http

              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_service
                    domains:
                      - "*"
                    routes:
                      - match:
                          prefix: "/.health/"
                        direct_response:
                          status: 200
                          body:
                            inline_string: "OK response from the HTTP envoy proxy"

                      # Handler for HTTP-01 Challenges, used by Certbot to provision SSL certificates.
                      - match:
                          prefix: "/.well-known/acme-challenge"
                        route:
                          cluster: certbot

                      # If you're none of the above, then redirect request to HTTPS which should be the application's Envoy router.
                      - match:
                          prefix: "/"
                        redirect:
                          path_redirect: "/"
                          https_redirect: true

              http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: certbot
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: certbot
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: certbot
                    port_value: 80