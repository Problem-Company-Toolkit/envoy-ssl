
# Documentation reference:
# https://www.envoyproxy.io/docs/envoy/v1.23.1/api-v3/api
# This template uses Jinja2.

static_resources:
  listeners:
    - name: proxy
      address:
        socket_address:
          address: 0.0.0.0
          port_value: {{ env['HTTPS_PROXY_PORT'] or 443 }}
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http

              route_config:
                name: local_route
                virtual_hosts:
                  - name: users_service
                    domains:
                      - {{ env['APP_HOSTNAME'] }}
                    routes:
                      - match:
                          prefix: "/.health/"
                        direct_response:
                          status: 200
                          body:
                            inline_string: "OK response from the Users' Envoy proxy"
                    
                      - match:
                          prefix: "/.api/users/"
                        route:
                          prefix_rewrite: /
                          cluster: users_service_cluster

                  - name: local_service
                    domains:
                      - "*"
                    routes:
                      - match:
                          prefix: "/.health/"
                        direct_response:
                          status: 200
                          body:
                            inline_string: "OK response from the HTTPS (SSL) envoy proxy"

              http_filters:
                - name: envoy.filters.http.cors
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: "/etc/letsencrypt/live/{{ env['CERT_NAME'] }}/fullchain.pem"
                    private_key:
                      filename: "/etc/letsencrypt/live/{{ env['CERT_NAME'] }}/privkey.pem"
                validation_context:
                  trusted_ca:
                      filename: "/etc/letsencrypt/live/{{ env['CERT_NAME'] }}/chain.pem"
  clusters:
    - name: users_service_cluster
      type: logical_dns
      lb_policy: round_robin
      connect_timeout: 0.25s
      load_assignment:
        cluster_name: users_service_cluster
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ env['USERS_SERVICE'] }}
                    port_value: {{ env['USERS_SERVICE_API_PORT'] or 80 }}